"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.router = void 0;
const bridge_1 = require("../bridge");
const callBridge = (0, bridge_1.getCallBridge)();
const getUrl = async (location) => {
    if (!(location === null || location === void 0 ? void 0 : location.target)) {
        throw new Error('target is required for getUrl');
    }
    const url = await callBridge('getUrl', location);
    if (!url) {
        throw new Error('Failed to get URL');
    }
    try {
        return new URL(url);
    }
    catch (error) {
        throw new Error(`Failed to parse URL: ${url} (${error})`);
    }
};
const navigate = (location) => {
    if (typeof location === 'string') {
        return callBridge('navigate', { url: location, type: 'same-tab' });
    }
    else {
        if (!(location === null || location === void 0 ? void 0 : location.target)) {
            throw new Error('target is required for navigation');
        }
        return callBridge('navigate', { ...location, type: 'same-tab' });
    }
};
const open = (location) => {
    if (typeof location === 'string') {
        return callBridge('navigate', { url: location, type: 'new-tab' });
    }
    else {
        if (!(location === null || location === void 0 ? void 0 : location.target)) {
            throw new Error('target is required for navigation');
        }
        return callBridge('navigate', { ...location, type: 'new-tab' });
    }
};
const reload = async () => callBridge('reload');
exports.router = {
    getUrl,
    navigate,
    open,
    reload
};
