/* header.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./header.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import LockFilledIcon from '@atlaskit/icon/core/lock-locked';
import LegacyLockFilledIcon from '@atlaskit/icon/glyph/lock-filled';
import Lozenge from '@atlaskit/lozenge';
import { fg } from '@atlaskit/platform-feature-flags';
import { Box, Inline, Text } from '@atlaskit/primitives/compiled';
var headingStyles = {
  root: "_11c82smr"
};
var iconWrapperStyles = {
  root: "_18zrv77o _1e0c1txw"
};

/**
 * __Header items__
 *
 * Comment header items.
 *
 * @internal
 */
var Header = function Header(_ref) {
  var author = _ref.author,
    edited = _ref.edited,
    isError = _ref.isError,
    isSaving = _ref.isSaving,
    restrictedTo = _ref.restrictedTo,
    savingText = _ref.savingText,
    time = _ref.time,
    testId = _ref.testId,
    type = _ref.type,
    _ref$headingLevel = _ref.headingLevel,
    headingLevel = _ref$headingLevel === void 0 ? '3' : _ref$headingLevel,
    shouldHeaderWrap = _ref.shouldHeaderWrap;
  var Heading = "h".concat(headingLevel);
  var shouldRender = author || time || restrictedTo || isSaving && savingText || edited || type;
  return shouldRender ? /*#__PURE__*/React.createElement(Heading, {
    className: ax([headingStyles.root])
  }, /*#__PURE__*/React.createElement(Inline, {
    alignBlock: "center",
    testId: testId,
    space: "space.100",
    as: "span",
    shouldWrap: fg('platform-comment-header-wrap') && shouldHeaderWrap
  }, author, type && /*#__PURE__*/React.createElement(Lozenge, {
    testId: testId && "".concat(testId, "-type")
  }, type), time && !isSaving && !isError && time, edited || null, isSaving ? savingText : null, restrictedTo && /*#__PURE__*/React.createElement(Text, {
    color: "color.text.subtlest"
  }, /*#__PURE__*/React.createElement(Inline, {
    alignBlock: "center",
    space: "space.050",
    as: "span"
  }, "\u2022", fg('platform-visual-refresh-icons-legacy-facade') || fg('platform-visual-refresh-icons') ? /*#__PURE__*/React.createElement(Box, {
    as: "span",
    xcss: iconWrapperStyles.root
  }, /*#__PURE__*/React.createElement(LockFilledIcon, {
    color: "currentColor",
    label: "",
    size: "small"
  })) : /*#__PURE__*/React.createElement(LegacyLockFilledIcon, {
    size: "small",
    label: ""
  }), restrictedTo)))) : null;
};
Header.displayName = 'CommentHeader';
export default Header;