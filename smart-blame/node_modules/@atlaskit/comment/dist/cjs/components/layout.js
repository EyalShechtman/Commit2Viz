/* layout.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("./layout.compiled.css");
var React = _interopRequireWildcard(require("react"));
var _runtime = require("@compiled/react/runtime");
var _css = require("@atlaskit/css");
var _compiled = require("@atlaskit/primitives/compiled");
var _avatarSlot = _interopRequireDefault(require("./slots/avatar-slot"));
var _contentSlot = _interopRequireDefault(require("./slots/content-slot"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != _typeof(e) && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var containerStyles = {
  root: "_kqswh2mm _yv0e5bpd _1lmc1gx3"
};
var inlineCommentStyles = {
  root: "_1lmc1rav"
};
var noChildrenStyles = {
  root: "_1lmcvpz5"
};

// if the background is appied on Box and tokens are not switched on it breaks.
// This can be safely removed (and applied on Box) when tokens are on by default
var highlightOverlayStyles = {
  root: "_1r04x0bf _nd5l1sux _ca0qu2gc _u5f3u2gc _n3tdu2gc _19bvu2gc _kqswstnw _lcxvglyw"
};
var stackOverrideStyles = {
  root: "_nd5l1dav _1q511ejb"
};
/**
 * __CommentLayout__
 *
 * The base layout for the comment component.
 *
 */
var Layout = function Layout(_ref) {
  var content = _ref.content,
    children = _ref.children,
    highlighted = _ref.highlighted,
    id = _ref.id,
    shouldRenderNestedCommentsInline = _ref.shouldRenderNestedCommentsInline,
    testId = _ref.testId,
    avatar = _ref.avatar;
  return /*#__PURE__*/React.createElement(_compiled.Grid, {
    gap: "space.100",
    xcss: (0, _css.cx)(containerStyles.root, shouldRenderNestedCommentsInline && inlineCommentStyles.root, !children && noChildrenStyles.root),
    testId: testId,
    id: id
  }, avatar && /*#__PURE__*/React.createElement(_avatarSlot.default, null, avatar), content && /*#__PURE__*/React.createElement(_contentSlot.default, null, content), children && /*#__PURE__*/React.createElement(_compiled.Stack, {
    xcss: stackOverrideStyles.root,
    space: "space.400"
  }, children), highlighted && /*#__PURE__*/React.createElement(_compiled.Box, {
    xcss: highlightOverlayStyles.root,
    backgroundColor: "color.background.neutral",
    testId: testId && "".concat(testId, "-highlighted")
  }));
};
Layout.displayName = 'CommentLayout';
var _default = exports.default = Layout;