/* comment.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("./comment.compiled.css");
var _runtime = require("@compiled/react/runtime");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _css = require("@atlaskit/css");
var _compiled = require("@atlaskit/primitives/compiled");
var _footer = _interopRequireDefault(require("./footer"));
var _header = _interopRequireDefault(require("./header"));
var _layout = _interopRequireDefault(require("./layout"));
var textStyles = {
  root: "_syaz1fxt",
  disabled: "_syaz1lh4"
};

/**
 * __Comment__
 *
 * Comments enable discussions on an entity such as a page, blog post, work item, or pull request.
 */
var Comment = function Comment(_ref) {
  var _ref$actions = _ref.actions,
    actions = _ref$actions === void 0 ? [] : _ref$actions,
    _ref$restrictedTo = _ref.restrictedTo,
    restrictedTo = _ref$restrictedTo === void 0 ? '' : _ref$restrictedTo,
    _ref$highlighted = _ref.highlighted,
    highlighted = _ref$highlighted === void 0 ? false : _ref$highlighted,
    _ref$isSaving = _ref.isSaving,
    isSaving = _ref$isSaving === void 0 ? false : _ref$isSaving,
    _ref$savingText = _ref.savingText,
    savingText = _ref$savingText === void 0 ? 'Sending...' : _ref$savingText,
    _ref$isError = _ref.isError,
    isError = _ref$isError === void 0 ? false : _ref$isError,
    _ref$errorActions = _ref.errorActions,
    errorActions = _ref$errorActions === void 0 ? [] : _ref$errorActions,
    _ref$errorIconLabel = _ref.errorIconLabel,
    errorIconLabel = _ref$errorIconLabel === void 0 ? '' : _ref$errorIconLabel,
    author = _ref.author,
    avatar = _ref.avatar,
    children = _ref.children,
    content = _ref.content,
    edited = _ref.edited,
    time = _ref.time,
    type = _ref.type,
    testId = _ref.testId,
    id = _ref.id,
    afterContent = _ref.afterContent,
    shouldRenderNestedCommentsInline = _ref.shouldRenderNestedCommentsInline,
    _ref$headingLevel = _ref.headingLevel,
    headingLevel = _ref$headingLevel === void 0 ? '3' : _ref$headingLevel,
    shouldHeaderWrap = _ref.shouldHeaderWrap;
  var headerProps = {
    author: author,
    edited: edited,
    isError: isError,
    isSaving: isSaving,
    restrictedTo: restrictedTo,
    savingText: savingText,
    time: time,
    type: type,
    headingLevel: headingLevel,
    shouldHeaderWrap: shouldHeaderWrap
  };
  var footerProps = {
    actions: actions,
    errorActions: errorActions,
    errorIconLabel: errorIconLabel,
    isError: isError,
    isSaving: isSaving
  };
  return /*#__PURE__*/_react.default.createElement(_layout.default, {
    testId: testId,
    shouldRenderNestedCommentsInline: shouldRenderNestedCommentsInline,
    id: id,
    avatar: avatar,
    content: /*#__PURE__*/_react.default.createElement(_compiled.Stack, {
      space: "space.075"
    }, /*#__PURE__*/_react.default.createElement(_compiled.Stack, {
      space: "space.050"
    }, /*#__PURE__*/_react.default.createElement(_header.default, (0, _extends2.default)({
      testId: testId && "".concat(testId, "-header")
    }, headerProps)), /*#__PURE__*/_react.default.createElement(_compiled.Box, {
      testId: testId && "".concat(testId, "-content"),
      xcss: (0, _css.cx)(textStyles.root, (isSaving || isError) && textStyles.disabled)
    }, content)), /*#__PURE__*/_react.default.createElement(_footer.default, (0, _extends2.default)({
      testId: testId && "".concat(testId, "-footer")
    }, footerProps)), afterContent),
    highlighted: highlighted
  }, children);
};
Comment.displayName = 'Comment';
var _default = exports.default = Comment;